// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Event {
  id           String   @id @default(uuid()) @postgresql.Uuid
  startingDate DateTime
  endingDate   DateTime
  note         String   @default("")
  user         User?    @relation("Event_user", fields: [userId], references: [id])
  userId       String?  @unique @map("user") @postgresql.Uuid
}

model Payment {
  id               String    @id @default(uuid()) @postgresql.Uuid
  dueDate          DateTime
  payDatetimestamp DateTime?
  amount           String    @default("")
  acceptedBy       User?     @relation("Payment_acceptedBy", fields: [acceptedById], references: [id])
  acceptedById     String?   @unique @map("acceptedBy") @postgresql.Uuid
  user             User?     @relation("Payment_user", fields: [userId], references: [id])
  userId           String?   @map("user") @postgresql.Uuid
  image_filesize   Int?
  image_extension  String?
  image_width      Int?
  image_height     Int?
  image_mode       String?
  image_id         String?
  cImage           Json?

  @@index([userId])
}

model User {
  id       String    @id @default(uuid()) @postgresql.Uuid
  name     String    @default("")
  email    String    @unique @default("")
  password String
  posts    Post[]    @relation("Post_author")
  events   Event?    @relation("Event_user")
  payments Payment[] @relation("Payment_user")
  accepted Payment?  @relation("Payment_acceptedBy")
}

model Post {
  id          String    @id @default(uuid()) @postgresql.Uuid
  title       String    @default("")
  status      String?   @default("draft")
  content     Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author") @postgresql.Uuid
  tags        Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(uuid()) @postgresql.Uuid
  name  String @default("")
  posts Post[] @relation("Post_tags")
}